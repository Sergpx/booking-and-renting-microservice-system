version: '3.8'

services:
  booking-service-db:
    image: postgres:latest
    container_name: booking-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=142536
      - POSTGRES_DB=booking-service-db
    ports:
      - "5433:5432"
    volumes:
      - "booking-service-db-data:/var/lib/postgresql/data"

  property-service-db:
    image: postgres:latest
    container_name: property-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=142536
      - POSTGRES_DB=property-service-db
    ports:
      - "5434:5432"
    volumes:
      - "property-service-db-data:/var/lib/postgresql/data"

  review-service-db:
    image: postgres:latest
    container_name: review-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=142536
      - POSTGRES_DB=review-service-db
    ports:
      - "5435:5432"
    volumes:
      - "review-service-db-data:/var/lib/postgresql/data"

  user-service-db:
    image: postgres:latest
    container_name: user-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=142536
      - POSTGRES_DB=user-service-db
    ports:
      - "5436:5432"
    volumes:
      - "user-service-db-data:/var/lib/postgresql/data"

  zookeeper:
    image: wurstmeister/zookeeper:latest # Образ Zookeeper
    container_name: zookeeper  # Имя контейнера
    ports:
      - "2181:2181"  # Проброс порта
    networks:
      - kafka-network  # Сеть, к которой подключается контейнер

  kafka:
    image: wurstmeister/kafka:latest  # Образ Kafka
    container_name: kafka  # Имя контейнера
    ports:
      - "9092:9092"  # Проброс порта
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Подключение к Zookeeper
#      KAFKA_CREATE_TOPICS: booking-requests:3:1,property-updates:2:1 // TODO add topics
    networks:
      - kafka-network  # Сеть, к которой подключается контейнер
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:5
    container_name: payment-service-db
    hostname: payment-service-db
    restart: always
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - 27017:27017 # TODO check
    healthcheck:
      test: mongo --eval "rs.initiate()"
      start_period: 5s
    networks:
      - mongo-network
    volumes:
#      - ./mongo-data:/data/db
      - "payment-service-db-data:/var/lib/mongodb/data"


networks:
  kafka-network:
    driver: bridge
  mongo-network:
    driver: bridge

volumes:
  booking-service-db-data:
    driver: local
  property-service-db-data:
    driver: local
  review-service-db-data:
    driver: local
  user-service-db-data:
    driver: local
  mongo-data:
    driver: local